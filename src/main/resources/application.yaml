spring:
  profiles:
    active: local
  datasource:
    url: jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driverClassName: org.postgresql.Driver
  jpa:
    open-in-view: false
  flyway:
    enabled: ${MIGRATE_DATABASE:false}
    url: jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
    user: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    locations: db/migration
    default-schema: public
  security:
    oauth2:
      client:
        registration:
          cognito:
            clientId: clientId
            clientSecret: clientSecret
            scope: openid
            redirect-uri: http://localhost:8080/login/oauth2/code/cognito
            clientName: clientName
        provider:
          cognito:
#            issuerUri: https://cognito-idp.{region}.amazonaws.com/{poolId}
            issuerUri: http://localhost:9229/.cognito/db/local_0Ywj6q4k
            user-name-attribute: cognito:username
application:
  debug: false
  jwt:
    secret: ${APPLICATION_JWT_SECRET}
    expirationInSecond: ${APPLICATION_JWT_EXPIRATION_IN_SECOND}
  redis:
    host: ${APPLICATION_REDIS_HOST}
    port: ${APPLICATION_REDIS_PORT}
    password: ${APPLICATION_REDIS_PASSWORD:}
  client:
    requestTimeOutInMillis: 5000
  aws:
    serviceEnvironment: default
    region: ${APPLICATION_AWS_REGION}
    accessKey: ${APPLICATION_AWS_ACCESS_KEY:}
    secretKey: ${APPLICATION_AWS_SECRET_KEY:}
    bucket: ${APPLICATION_AWS_BUCKET}
  mail:
    enable: ${APPLICATION_MAIL_ENABLE:false}
    serviceEnvironment: ${APPLICATION_MAIL_SERVICE_ENVIRONMENT}
    smtp:
      host: ${APPLICATION_MAIL_SMTP_HOST:}
      port: ${APPLICATION_MAIL_SMTP_PORT:}
      username: ${APPLICATION_MAIL_SMTP_USERNAME:}
      password: ${APPLICATION_MAIL_SMTP_PASSWORD:}
      sender: ${APPLICATION_MAIL_SMTP_SENDER:}
      sslEnable: ${APPLICATION_MAIL_SMTP_SSL_ENABLE:}
    ses:
      region: ${APPLICATION_MAIL_AWS_SES_REGION:}
      sender: ${APPLICATION_MAIL_AWS_SES_SENDER:}
    sendgrid:
      apiKey: ${APPLICATION_MAIL_SENDGRID_API_KEY:}
      fromEmail: ${APPLICATION_MAIL_SENDGRID_FROM_EMAIL:}
      fromName: ${APPLICATION_MAIL_SENDGRID_FROM_NAME:}
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
